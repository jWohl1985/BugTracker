@using BugTracker.Models.Enums
@using BugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@model IEnumerable<BugTracker.Models.Project>

@inject UserManager<BugTrackerUser> userManager
@inject IProjectService projectService

@{
    ViewData["Title"] = "All Projects";
    BugTrackerUser bugTrackerUser = await userManager.GetUserAsync(User);
}

<h1>All Projects</h1>

@if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @if (item.ImageData is not null && item.ImageType is not null)
                {
                    <img class="img-fluid img-thumbnail" style="width:80px;height:80px"
                    src="data:image/*;base64,@(Convert.ToBase64String(item.ImageData))">
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Company.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority.Id)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |

                @{
                    bool userIsProjectManager = (await projectService.GetProjectManagerAsync(item.Id))?.Id == bugTrackerUser.Id;
                }

                @if (User.IsInRole(nameof(Roles.Admin)) || userIsProjectManager)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>

                    @if(item.Archived)
                    {
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                    else
                    {
                        <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
